{"version":3,"sources":["components/LaunchItem.js","components/MissionKey.js","components/Launches.js","components/Launch.js","SpaceX.png","App.js","reportWebVitals.js","index.js"],"names":["LaunchItem","launch","flight_number","mission_name","launch_date_local","launch_success","className","class","classNames","format","to","MissionKey","LAUNCHES_QUERY","gql","Launches","query","loading","error","data","console","log","launches","map","Component","LAUNCH_QUERY","Launch","this","props","match","params","parseInt","variables","launch_year","rocket","rocket_id","rocket_name","rocket_type","client","ApolloClient","uri","App","src","logo","alt","style","width","display","margin","textAlign","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e13a545b.chunk.js","sourcesContent":["import React from 'react';\r\nimport classNames from 'classnames';\r\nimport Moment from 'react-moment';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function LaunchItem( { launch: { flight_number, mission_name, launch_date_local, launch_success } }) {\r\n    return (\r\n        <div className=\"card card-body mb-3\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-9\">\r\n                    <h4><i class=\"fa fa-rocket\"></i> Mission: <span className={classNames({\r\n                        'text-success': launch_success,\r\n                        'text-danger': !launch_success\r\n                    })}>{mission_name}</span></h4>\r\n                    <p>Date: <Moment format=\"YYYY-MM-DD HH:mm\">{launch_date_local}</Moment></p>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                    <Link to={`/launch/${flight_number}`} className=\"btn btn-secondary\"><i class=\"fas fa-info-circle\"></i> Launch Details</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function MissionKey() {\r\n    return (\r\n        <div className=\"my-3\">\r\n            <p>\r\n                <span className=\"px-3 mr-2 bg-success\" /> = Successful launch\r\n            </p>\r\n            <p>\r\n                <span className=\"px-3 mr-2 bg-danger\" /> = Failed launch    \r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component, Fragment } from 'react'\r\nimport gql from 'graphql-tag';\r\nimport { Query } from 'react-apollo';\r\nimport LaunchItem from './LaunchItem';\r\nimport MissionKey from './MissionKey';\r\n\r\nconst LAUNCHES_QUERY = gql `\r\n    query LaunchesQuery { \r\n        launches {\r\n            flight_number\r\n            mission_name\r\n            launch_date_local\r\n            launch_success\r\n        }\r\n    }\r\n`;\r\n\r\nexport class Launches extends Component {\r\n    render() {\r\n        return (\r\n            // Fragment is a dummy wrapper as React requires a wrapper!\r\n            <Fragment>\r\n                <h1 className=\"display-4 my-3\">Launches </h1>\r\n                <MissionKey/>\r\n                <Query query={LAUNCHES_QUERY}>\r\n                    {\r\n                        ({ loading, error, data }) => {\r\n                            // Load data from GraphQL data\r\n                            if(loading) return <h4>Loading..</h4>\r\n                            if(error) console.log(error);\r\n\r\n                            return <Fragment> \r\n                            {\r\n                                data.launches.map(launch => (\r\n                                    <LaunchItem key={launch.flight_number} launch={launch}/>\r\n                                ))\r\n                            }\r\n                            </Fragment>\r\n                        }\r\n                    }\r\n                </Query>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Launches\r\n","import React, { Component, Fragment } from 'react'\r\nimport gql from 'graphql-tag';\r\nimport { Query } from 'react-apollo';\r\nimport { Link} from 'react-router-dom';\r\nimport classNames from 'classnames';\r\n\r\nconst LAUNCH_QUERY = gql`\r\n    query LaunchQuery($flight_number: Int!) {\r\n        launch(flight_number: $flight_number) {\r\n            flight_number\r\n            mission_name\r\n            launch_year\r\n            launch_success\r\n            launch_date_local\r\n            rocket {\r\n                rocket_id\r\n                rocket_name\r\n                rocket_type\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport class Launch extends Component {\r\n    render() {\r\n        let { flight_number } = this.props.match.params;\r\n        flight_number = parseInt(flight_number);\r\n        return (\r\n            <Fragment>\r\n                <Query query={LAUNCH_QUERY} variables={{flight_number}}>\r\n                    {\r\n                        ({ loading, error, data}) => {\r\n                            if(loading) return <h4>Loading...</h4>\r\n                            if(error) console.log(error)\r\n                            const { \r\n                                mission_name, \r\n                                flight_number, \r\n                                launch_year, \r\n                                launch_success, \r\n                                rocket: { \r\n                                    rocket_id, \r\n                                    rocket_name, \r\n                                    rocket_type \r\n                                }\r\n                        }  = data.launch\r\n                            \r\n                        return ( \r\n                        <div class=\"launch-page\">\r\n                        <Link to=\"/\" className=\"back-to-home btn-secondary\">Return to Launches</Link>\r\n\r\n                        <h1 className=\"display-4 my-3\">\r\n                            <span><i class=\"fas fa-rocket\"></i> Mission:</span> {mission_name}\r\n                        </h1>\r\n                        <h4 className=\"mb-3\">Launch details</h4>\r\n                        <ul className=\"list-group\">\r\n                            <li className=\"list-group-item\">\r\n                                Flight Number: {flight_number}\r\n                            </li>\r\n                            <li className=\"list-group-item\">\r\n                                Launch Year: {launch_year}\r\n                            </li>\r\n                            <li className=\"list-group-item\">\r\n                                Launch Successful: <span \r\n                                    className={classNames({\r\n                                        'text-success': launch_success,\r\n                                        'text-danger': !launch_success                   \r\n                                })}>{launch_success ? 'Yes' : 'No'}</span>\r\n                            </li>\r\n                        </ul>\r\n                        <h4 className=\"mb-3\">Rocket details</h4>\r\n                        <ul className=\"list-group\">\r\n                            <li className=\"list-group-item\">\r\n                                Rocket ID: {rocket_id}\r\n                            </li>\r\n                            <li className=\"list-group-item\">\r\n                                Rocket Name: {rocket_name}\r\n                            </li>\r\n                            <li className=\"list-group-item\">\r\n                                Rocket Type: {rocket_type}\r\n                            </li>\r\n                        </ul>\r\n                        \r\n                        </div>\r\n                        )\r\n\r\n\r\n                        }\r\n                    }\r\n                </Query>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Launch\r\n","export default __webpack_public_path__ + \"static/media/SpaceX.4ef35d1d.png\";","import './App.css';\nimport React, { Component } from 'react';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\nimport Launches from './components/Launches';\nimport Launch from './components/Launch';\nimport logo from './SpaceX.png'\n\nconst client = new ApolloClient({\n  uri: '/graphql'\n});\n\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n    <Router>\n      <div className=\"App\" className=\"container\">\n        <header>\n          <img src={logo} alt=\"SpaceX logo\" style={{ width: 300, display: 'block', margin: 'auto' }}/>\n          <h3 style={{ display: 'block', margin: 'auto', textAlign: 'center' }}>mission log</h3>\n        </header>\n      <Route exact path=\"/\" component={Launches}/>\n      <Route exact path=\"/launch/:flight_number\" component={Launch}/>\n\n      </div>\n      <div class=\"faded-bg\"></div>\n    </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}